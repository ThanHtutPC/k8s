Vagrant.configure("2") do |config|
  config.vm.box = "generic/ubuntu2204"

  # Shared provider settings
  config.vm.provider :libvirt do |libvirt|
    libvirt.memory = 2048   # give a bit more RAM
    libvirt.cpus = 2
    libvirt.machine_type = "q35"
  end

  # General SSH and Boot Settings
  config.ssh.insert_key = true 
  config.vm.boot_timeout = 600

  # Provision script
  provision_script = <<-SHELL
    echo "nameserver 1.1.1.1" | sudo tee -a /etc/resolv.conf

    set -e

    echo "[INFO] Updating apt sources..."
    sudo sed -i 's|http://.*archive.ubuntu.com|http://archive.ubuntu.com|g' /etc/apt/sources.list
    sudo sed -i 's|http://.*security.ubuntu.com|http://security.ubuntu.com|g' /etc/apt/sources.list

    echo "[INFO] Updating apt packages..."
    sudo apt-get update -y

    echo "[INFO] Installing prerequisites..."
    sudo apt-get install -y apt-transport-https ca-certificates curl gpg software-properties-common

    echo "[INFO] Installing containerd..."
    sudo apt-get install -y containerd
    sudo mkdir -p /etc/containerd
    containerd config default | sudo tee /etc/containerd/config.toml >/dev/null

    # Fix containerd cgroup driver for Kubernetes
    sudo sed -i 's/SystemdCgroup = false/SystemdCgroup = true/' /etc/containerd/config.toml
    sudo systemctl restart containerd
    sudo systemctl enable containerd

    echo "[INFO] Adding Kubernetes apt repo..."
    sudo mkdir -p /etc/apt/keyrings
    curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.30/deb/Release.key | \
      sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg

    echo "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] \
      https://pkgs.k8s.io/core:/stable:/v1.30/deb/ /" | \
      sudo tee /etc/apt/sources.list.d/kubernetes.list

    echo "[INFO] Installing kubeadm, kubelet, kubectl..."
    sudo apt-get update -y
    sudo apt-get install -y kubelet kubeadm kubectl
    sudo apt-mark hold kubelet kubeadm kubectl

    echo "[INFO] Disabling swap (required for Kubernetes)..."
    sudo swapoff -a
    sudo sed -i '/ swap / s/^/#/' /etc/fstab
  SHELL

  # Control plane
  config.vm.define "k8s-control" do |node|
    node.vm.hostname = "k8s-control"
    # Default NAT network (no private_network)
    node.vm.provision "shell", inline: provision_script
  end

  # Worker 1
  config.vm.define "k8s-worker1" do |node|
    node.vm.hostname = "k8s-worker1"
    node.vm.provision "shell", inline: provision_script
  end

  # Worker 2
  config.vm.define "k8s-worker2" do |node|
    node.vm.hostname = "k8s-worker2"
    node.vm.provision "shell", inline: provision_script
  end
end
